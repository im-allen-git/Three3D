
var dragObj;
var selectedDragObj;
var selectedDragObjFlag;
var maxW, maxH;
var shapesEventL = document.getElementById( "childWrapper" );
var shapesMain = document.getElementById( "shapes" );
var movedDir; //拖拽距离
var dragedFlag = false;
var listShapes = [];
var listLDraw = [];
var listSTL = [];
var saveFlag = false;

// var mobile = /Android|webOS|iPhone|iPad|BlackBerry/i.test( navigator.userAgent );
var mobile = true;
var container = document.getElementById( 'container' ); //
var twoPointTouchFlag = false;
var pointOneFlag, pointTwoFlag, touchScale;
var camera, scene, renderer;
var directionalLight, spotLight;
var cameraZoom = 1;
var outlinePass, composer, effectFXAA, renderPass;
var plane;
var gridHelper, gradGroundMesh, gradGroundMesh1;
var mouse, raycaster, isShiftDown = false;
var controls;
var mouseHelper, mouseHelperMaterial;
var controlsMoved = false;
var objects = [];
var currentObj; //当前形状
var currentObjMaterial = new THREE.MeshLambertMaterial( { color: 0xdddddd } );
var currentShapeType;
var currentColorFlag = 0;
var currentObjMesh; //当前obj mesh
var shapeHelperObjects = [];
var shapesObj = []; //所有的当前已放置的obj
var currentAllObjs = []; //所有的当前已放置的obj
var transformControl;
var WORK_SPACE_SIZE = 100;
var SHAPE_SIZE = 10;
var LIMIT_SIZE = 4;
var tcX, tcY, tcZ, tcScale, tcScaleY; //当前对象的xyz值
var tcScaleYPosition, tcScaleYPositionFlag; //tcScaleYPosition: 改变大小之前位置；tcScaleYPosition: 改变大小之前是否贴住工作台
var transformControlModeType = 1;
var transformControlMove = false;
var transformDragFlag = true;
var focusedTransformObj;
var textTR = '当前状态:<br>移动';
var textSC = '当前状态:<br>改变大小';
var textRO = '当前状态:<br> 旋转';
var intersectsSelect = [];
var intersection = {
	intersects: false,
	point: new THREE.Vector3(),
	normal: new THREE.Vector3()
};
var allOperation = [];//all the operated operation(undo)
var redoOperation = [];//all the redo operation
var eachObjectInfo = {};//每一个对象的每一个步骤；
var eachRedoObjectInfo = {};//每一个对象的每一个步骤；
var shootedFlag = false;

var stlGeoFlag = 0; //0 geo; 1 stl 2, localStl
//LDraw
var lDrawModul;
var lDrawModulGUI;
var lDrawGuiData = {
	smoothNormals: true,
	separateObjects: true,
	constructionStep: 0,
	noConstructionSteps: "无步骤"
};
//LDraw  end
var currentModule = 0; //0:基础模型 1：lego
var goHomeFlag = false;//是否是点击首页
var deleteObjFlag = false;//是否点击了删除

var mouse = new THREE.Vector2();
var modifier = new THREE.BendModifier();
var fontObj;
var exporter = new THREE.STLExporter(); //导出工具  exporter tool
var nameValidate;
var userName;
var model_ring;
var model_longmao;
var model_shudi;
var model_heart;
var currentModelStl=0;
var checkNameFlag=false;//名字检测是否通过
$( function () {
	var swiper = new Swiper( '.swiper-container', {
		freeMode: false,
		freeModeSticky: true,
		// loop:true,
		observer: true,//修改swiper自己或子元素时，自动初始化swiper
		observeParents: true,//修改swiper的父元素时，自动初始化swiper
		navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
		},
		on: {
			slideChangeTransitionEnd: function(){
				console.log(this.activeIndex);//切换结束时，告诉我现在是第几个slide
				currentModelStl = this.activeIndex;
			},

		},
	} );
	/*init();
	render();*/
} );
function checkName() {
	var name = $("#modelName").val();
	userName = name;
	if(name){
		// showLoading();
		init();
		render();
		$("#title").text("选择定制模型")
		$(".name_wrapper").hide();
		$(".modules_slides").show(200);
		// loadSTL(1);
		checkNameFlag=true;
		$("#es6Next").trigger("click");

	}
	else{
		$(".validate_name").show();
		nameValidate = setTimeout(function(){
			$(".validate_name").hide();
		},2000)
	}
}
function clearTimeoutFn() {
	clearTimeout(nameValidate)
	$(".validate_name").hide();
	$("#modelName").focus();
}
function selectModule(){
	showLoading();
	if(currentModelStl == 0){
		// $("#es6Next").trigger("click");
		$("#loadHeart").trigger("click");
	}else if(currentModelStl == 1) {
		loadSTL(1);
	}else if(currentModelStl == 2) {
		loadSTL(2);
	}
	submitStatus('-1')
}
function confirmPrint(){
	var confirmName = '';
	var confirmStlName = '';
	var confirmStlArr = ['',
		'iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAMAAABOo35HAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyFpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNS1jMDE0IDc5LjE1MTQ4MSwgMjAxMy8wMy8xMy0xMjowOToxNSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDozNzE1MUZDQTAyRUUxMUVCODdEMUM0MENCNTRBQUQ2QiIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDozNzE1MUZDQjAyRUUxMUVCODdEMUM0MENCNTRBQUQ2QiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjM3MTUxRkM4MDJFRTExRUI4N0QxQzQwQ0I1NEFBRDZCIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjM3MTUxRkM5MDJFRTExRUI4N0QxQzQwQ0I1NEFBRDZCIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+d9puRgAAAwBQTFRF+vn5xMTE////urq63NzcvLy8wsLCtLS0vr6+3t7ewMDA4ODg7Ozs4uLi6urq5OTk5ubm6Ojo7u7u9vb28PDw9PT0/Pv88vLy/Pr6/vz82NXW7Onp1NHS4N3e+Pb23Nna9fLzsbGx5eHi8O3u6OXm0MzO/fr7qqqq6ubo5uLl0s7Q1tLU7erruLq43trc2tbYyMXGt7i27uzs4t7g8e7vzMjKxMHC8vDwxcLEt7i4ycrK9vT09/f31tPU09TU9vT2uLa2//78ysbI08/RzsrMvbq6vsC+y8zM/fz89PLz09TTyszK2tjYwb6///z+wr/C39zctra1ubq58vDyv7y/5uTkwMLA0dLS29javry8t7i3u7i56+jq6+jo9fP0xsjHxMbGwcHB7+ztvL29x8PF1tjY1dbWyMrJvb29u7y8y8jJwsPD4+Dgx8jHvr68zc7O5ebm2NrY8fLyzM3Nz9DQtba219bV1NbV1dPTw8PDxMDCvLq8tbW1+vz78vPz3uDg29zb2drZv7+/yMnKwsDAz8/P0tLS09PTzs7O0dHRt7e3y8vL1NTU1tbWysrK1dXVycnJ19fXtra22NjYuLi42trayMjIubm5x8fH2dnZ29vbxsbG0NDQ0tPTuLm4uLm50tPS1NXV0NHQzs/Otre35+TmyMnJt7e2ysvL1dTUtre2yMnIysvKubi4xsfHzs/P09LS0dLR1tfX19bWyMjJt7a3tba1u7u7xcbFxsbFwsLB4+Pjy8zL0M7O09LT6erq0tLR1NXUy8rLz83Nt7a14+Tk0NHR2NjZ2NnZ2dfY5+Tkubm4xcfG19fY6OroycnI6ejotrW27+/v3Nra5+fn2NfWxcXF7/Dwx8THvLu73N7e+Pj44Nze/f3919jY/f79zs7Ptre44eHhu7m64eLi5ODh7uzq6enp6+vrwcHA5eXl7e3t7e7u7u/u1dTVz9DPysrL1tXV1tfWyMjHzc3N1NPU0dDQ0dHQ0tHRycfI2trZ8fHx2tvb8/PzzMzM////fhiF+gAAAQB0Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AFP3ByUAADj2SURBVHja7J0JgOPlddil0V9a3RodM9pdYDGLF3Ms4AD2wjLgrCHJ4IOSrRMIMU61uEQEKK5JGpRO0ljtX/et0a1dDhs7+IoTx1FiOUkTx0lwnMaRx2rcQZlWCZWQkrRu5dauMlK/9x3/Q9LsDPbCaLTzscfsLmNmf37vfe/+FMP9s+Oj2EewD2sf1j6sfVj7sPZh7SPYh7UPax/WPqx9WPuw9hHsw9qHtQ9rH9Y+rH1Y+wj2Ye3D2oe1D2ubs3Hq0KnG9/WZpw4dOnRxwbrnhQ+tWb9+y+Jr/sQjD3Usa1+/RHERwTrz/BOJpwJ/8sgrr/U//qYXP/XZk4Of/8XLDl40sE785dcGgbLP7z973/JrY/V/nwj3+KA/8twrFwusjft+JgGwEK13ffU1famf+2wMw/rOI99eukhg3R54IjHgMaw7f/9Nr+ETH/pUIjYIoM/0Rx556CKB9f4vPRHr8UhA0Lnz5p1/3vqLT8QEWJddHLDmjv6LRBj+zhjW0/adQ353IhYe9DCs576puChgHfn2Z7PhHoP1rqM7/byDDzwBsAI8j/T3uRdvuShgHf9oNoFhYT08e3invunxQILCQp8YeeToRQHrspO/FSOwfADru1fu8PO+8ekYMlkUlj/+wMZFAGu58O8TIizf2bM7NPFHXjwphRV5evMigLX+4qcEWHDO3ji3M0/2/o/HwL4DLEQ54jt+EcBy8lkGC9M6++KRHX3e0adiFBb6RLgZvnoRwDozCmtnRqvxnl+TwfLfed9FAOuFpxCsgQTWs2/ekcn6fEKEBTfDcy/NPqy5G07KYfn8OxKREz4pLPRZf/iPipmHdfClk9mYDNadh3fiBJx5Hl2G4bDwif6zfufMw1r69skEgcULsHaSnHrzR+WwfGd//6aZh3X75z4+Auvs0/fsQCDv+5+xEVj+9888rFv+TzbB3CUK6zs78JiOfPPkCCzfzi6GPQ3rkvLHGSzmlUZ28Lc+4QsnRmEdnXlYD300IcIivsO7dhDwXMKP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',
		''];
	var confirmStlImg = '';

	if(currentModelStl == 0){
		confirmName = model_heart;
		confirmStlName = userName+"-heart.stl";
		confirmStlImg = confirmStlArr[0]
		// saveString(model_heart,userName+"-heart.stl")

	}
	else if(currentModelStl == 1){
		confirmName = model_longmao;
		confirmStlName = userName+"-longmao.stl";
		confirmStlImg = confirmStlArr[1]

		// saveString(model_longmao,userName+"longmao.stl")
	}
	else if(currentModelStl == 2){
		confirmName = model_shudi;
		confirmStlName = userName+"-shudi.stl";
		confirmStlImg = confirmStlArr[2]
		// saveString(model_shudi,userName+"-shudi.stl")
	}
	showLoading();
	js.saveStl( confirmName, confirmStlName, confirmStlImg);
	submitStatus('-1')
}

/**
 *
 * @param status -1 正在保存 0 失败， 1 保存stl到本地成功  2   上传stl成功（生成gcode）
 */
var statusInterval;
function submitStatus(status){
	clearInterval(statusInterval);
	$("#loading_data").find("#submitStatus").remove();
	var index = 1
	var content ;
	switch (Number(status)) {
		case -1:
			content = "<div id='submitStatus'>模型正在制作并保存中.</div>";
			$("#loading_data").append(content);
			statusInterval = setInterval(function(){
				$("#loading_data").find("#submitStatus").remove();
				content = "<div id='submitStatus'>模型正在制作并保存中";
				index++
				if(index==1){
					content+=".</div>";
				}
				else if(index==2){
					content+="..</div>";
				}
				else if(index==3){
					content+="...</div>";
					index=0
				}
				console.log()
				$("#loading_data").append(content)
			},1000);
			break;
		case 0:
			content = "<div id='submitStatus'>模型保存失败,请检查网络并重新打开App</div>";
			$("#loading_data").html(content);
			break;
		case 1:
			content = "<div id='submitStatus'>模型准备打印中.</div>";
			$("#loading_data").append(content);
			statusInterval = setInterval(function(){
				$("#loading_data").find("#submitStatus").remove();
				content = "<div id='submitStatus'>模型准备打印中";
				index++
				if(index==1){
					content+=".</div>";
				}
				else if(index==2){
					content+="..</div>";
				}
				else if(index==3){
					content+="...</div>";
					index=0
				}
				$("#loading_data").append(content)
			},1000);
			break;
		default:
			$("#loading_data").find("#submitStatus").remove();
	}
}
//main
function init() {
	renderer = new THREE.WebGLRenderer( { antialias: true, alpha: true, preserveDrawingBuffer: true} );
	renderer.setPixelRatio( ( window.devicePixelRatio ) ? window.devicePixelRatio : 1 );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.shadowMap.enabled = true;
	renderer.autoClear = false;
	renderer.setClearColor( 0x000000, 0.0 );
	container.appendChild( renderer.domElement );

	camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );
	// camera.position.set( 0, 200, 350 ); //正面
	camera.position.set( 83, 71, 124); //45°
	camera.lookAt( 0, 0, 0 );

	scene = new THREE.Scene();
	// scene.background = new THREE.Color( 0xf0f0f0 );
	// scene.background = new THREE.Color( 0xf8f8f9 );
	// scene.background = new THREE.Color( 0xffffff );
	// scene.userData.outlineEnabled = true;
	// scene.add( new THREE.AxesHelper( 50 ) ); //坐标位置辅助线 Coordinate system

	// roll-over helpers

	var rollOverGeo = new THREE.BoxBufferGeometry( SHAPE_SIZE, SHAPE_SIZE, SHAPE_SIZE );
	mouseHelperMaterial = new THREE.MeshBasicMaterial( { color: 0xff0000, opacity: 0.5, transparent: true } );
	mouseHelper = new THREE.Mesh( rollOverGeo, mouseHelperMaterial );
	if (! mobile) {
		scene.add( mouseHelper );
	}

	raycaster = new THREE.Raycaster();
	mouse = new THREE.Vector2();

	var geometry = new THREE.PlaneBufferGeometry( WORK_SPACE_SIZE, WORK_SPACE_SIZE );
	geometry.rotateX( - Math.PI / 2 );

	plane = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial( { color: 0xe5e4df, visible: true } ) );
	plane.name = "plane";
	plane.receiveShadow = true;
	plane.castShadow = true;
	scene.add( plane );
	objects.push( plane );

	// grid

	gridHelper = new THREE.GridHelper( WORK_SPACE_SIZE, 20, 0x999999, 0xc999999 );
	// gridHelper = new THREE.GridHelper( 300, 6, 0x999999, 0xc999999 );
	gridHelper.name = 'GridHelper';
	scene.add( gridHelper );

	gradGroundMesh = new THREE.Mesh( new THREE.BoxBufferGeometry( WORK_SPACE_SIZE, .8, WORK_SPACE_SIZE ), new THREE.MeshLambertMaterial( { color: 0xffffff } ) );
	gradGroundMesh.position.y = - .8;
	gradGroundMesh.name = 'GridHelper';
	gradGroundMesh.receiveShadow = true;
	gradGroundMesh.castShadow = true;
	scene.add( gradGroundMesh );
	gradGroundMesh1 = new THREE.Mesh( new THREE.BoxBufferGeometry( WORK_SPACE_SIZE, 3, WORK_SPACE_SIZE ), new THREE.MeshLambertMaterial( { color: 0xffc869 } ) );
	gradGroundMesh1.position.y = - 2.5;
	gradGroundMesh1.name = 'GridHelper';
	gradGroundMesh1.receiveShadow = true;
	gradGroundMesh1.castShadow = true;
	scene.add( gradGroundMesh1 );
	//grid end

	// lights
	var ambientLight = new THREE.AmbientLight( 0x606060, 1 ); //0x606060
	scene.add( ambientLight );
	directionalLight = new THREE.DirectionalLight( 0xFFFFFF, 1.3 );
	directionalLight.position.set( 1, 0.75, 0.5 ).normalize();
	// dirLightHeper = new THREE.DirectionalLightHelper( directionalLight, 215 );//光源辅助线
	// scene.add( dirLightHeper );
	scene.add( directionalLight );

	container.addEventListener( 'resize', onWindowResize, false );
	window.addEventListener( 'resize', onWindowResize, false );
	getFont();
	animate();
	onWindowResize();
}

function animate() {
	requestAnimationFrame( animate );
	renderer.render( scene, camera );
	// stats.update();
}

function onWindowResize() {
	var controlBoardWidth = $( "#shapes" ).hasClass( "shapes_close" ); //left decal side width
	if (controlBoardWidth) {
		camera.aspect = ( window.innerWidth ) / window.innerHeight;
		renderer.setSize( window.innerWidth, window.innerHeight );
		composer.setSize( window.innerWidth, window.innerHeight );
		effectFXAA.uniforms['resolution'].value.set( 1 / window.innerWidth, 1 / window.innerHeight );

	} else {
		camera.aspect = ( window.innerWidth - 100 ) / window.innerHeight;
		renderer.setSize( window.innerWidth - 100, window.innerHeight );
	}
	camera.updateProjectionMatrix();

}

function render() {

	renderer.render( scene, camera );

}

/**
 * 清空当前obj对象的缓存
 * @param mesh  mesh对象
 * */
function clearCache( currentMesh ) {
	currentMesh.geometry.dispose();
	currentMesh.material.dispose();
}
function checkIntersection( event ) {
	var x, y;
	if (event.changedTouches) {
		x = event.changedTouches[0].pageX;
		y = event.changedTouches[0].pageY;
	} else {
		x = event.clientX;
		y = event.clientY;
	}
	mouse.x = ( x / window.innerWidth ) * 2 - 1;
	mouse.y = - ( y / window.innerHeight ) * 2 + 1;

	var controlBoardWidth = $( "#shapes" ).hasClass( "shapes_close" ); //left decal side width
	if (! controlBoardWidth) {
		mouse.x = ( x / ( window.innerWidth - 100 ) ) * 2 - 1;
		mouse.y = - ( y / window.innerHeight ) * 2 + 1;
	}
	if (! plane) return;
	raycaster.setFromCamera( mouse, camera );
	raycaster.intersectObject( plane, false, intersectsSelect );
	if (intersectsSelect.length > 0) {
		var p = intersectsSelect[0].point;
		mouseHelper.position.set( 0, 0, 0 );
		mouseHelper.position.copy( p );  //copy intersection position to mouseHelper
		intersection.point.copy( p );
		/*1.克隆旧的法线 2.旧法线乘以模型的世界矩阵得到归一化后的法线 3.和一个标量相乘，放大10倍。 4.加上点击点的坐标，进行平移。*/
		var n = intersectsSelect[0].face.normal.clone();
		n.transformDirection( plane.matrixWorld );
		n.multiplyScalar( 10 );
		n.add( intersectsSelect[0].point );

		intersection.normal.copy( intersectsSelect[0].face.normal );
		mouseHelper.lookAt( n );

		var sceneChilds = raycaster.intersectObjects( scene.children ); //get all objects in the current position of your mouse;
		if (sceneChilds.length > 1) {
			if (sceneChilds && ( sceneChilds[0].object.name == "shapes" || sceneChilds[0].object.name == "shapes_text" || sceneChilds[0].object.name == "stl" || sceneChilds[0].object.name == "stlLocal" )) {
				transformControl.detach( transformControl.object );
				transformControl.attach( sceneChilds[0].object );
			} else if (sceneChilds[0].object.name == "plane") {
				transformControl.detach( transformControl.object );
				transformControl.attach( sceneChilds[0].object );
			}
		}
		intersection.intersects = true;
		intersectsSelect.length = 0;

	} else {
		intersection.intersects = false;

		var sceneChilds = raycaster.intersectObjects( scene.children ); //get all objects in the current position of your mouse;
		if (sceneChilds.length > 0) {
			if (sceneChilds && ( sceneChilds[0].object.name == "shapes" || sceneChilds[0].object.name == "shapes_text" || sceneChilds[0].object.name == "stl" || sceneChilds[0].object.name == "stlLocal"  )) {
				transformControl.detach( transformControl.object );
				transformControl.attach( sceneChilds[0].object );
			} else if (sceneChilds[0].object.name == "plane") {
				transformControl.detach( transformControl.object );
				transformControl.attach( sceneChilds[0].object );
			}
		}
	}
	render();
}

// 导出相关
function exportMoudle( type , name,thisSTL) { //type 0: ASCII 1: GLTF
		scene.remove( mouseHelper );
		clearCache( gridHelper );
		scene.remove( gridHelper );
		clearCache( gradGroundMesh );
		scene.remove( gradGroundMesh );
		clearCache( gradGroundMesh1 );
		scene.remove( gradGroundMesh1 );
		clearCache( plane );
		scene.remove( plane );
		camera.position.set( 67, 57, 101 ); //45°
		camera.lookAt( 0, 0, 0 );
		// scene.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), -90 * ( Math.PI / 2 ) );
		animate();
		//threejs Y-up, 别的事Z-up,所以到处之前要旋转
		scene.rotation.set( Math.PI / 2, 0, 0 );
		scene.updateMatrixWorld();
		//end
		var nameStr = name;
		if (nameStr) {
			// exporter = new THREE.STLExporter(); //导出工具  exporter tool
			var result = exporter.parse( scene );
			if(thisSTL==0){
				model_ring = result;
				console.log("get model_ring result")
			} else if(thisSTL==1){
				model_longmao = result;
				console.log("get model_longmao result")
			}else if(thisSTL==2){
				model_shudi = result;
				console.log("get model_shudi result")
			}
			console.log("clean前：")
			console.log(scene.children)
			clearObjects();
			console.log("clean后：")
			console.log(scene.children)
			console.log("thisStl down:"+thisSTL)
			// saveString( result, nameStr + '.stl' );
			// saveAsImage(nameStr,result );
			// successFlag = true;

		}
/*
		scene.add( gridHelper );
		scene.add( gradGroundMesh );
		scene.add( gradGroundMesh1 );
		scene.add( plane );*/
		//threejs Y-up, 别的事Z-up,所以到处之前要旋转
		scene.rotation.set( 0, 0, 0 );
		scene.updateMatrixWorld();
	/*if(thisSTL==0){
		loadSTL(1)
	} else if(thisSTL==1){
		loadSTL(2);
	}else if(thisSTL==2){
		// 该方法主要是用于 心 模型，内嵌文字
		$("#es6Next").trigger("click")
	}*/
	confirmPrint();
		//end
}

function save( blob, filename ) {
	var link = document.createElement( 'a' );
	link.style.display = 'none';
	link.className = 'saveFile';
	document.body.appendChild( link );
	link.href = URL.createObjectURL( blob );
	link.download = filename;
	link.click();
}

function saveString( text, filename ) {
	// console.log( new Blob( [ text ]))
	save( new Blob( [text], { type: 'text/plain' } ), filename );
}

function clearObjects(){
	// 保存成功，清空当前项目
	objects.forEach( function ( d ) {
		clearCache( d );
		scene.remove( d );
	} );
}
// 导出相关 end
//camera 方向

async function loadSTL( thisSTL, name ) {
	var file,fontSize;
	switch (thisSTL) {
		case 0:
			file = 'file:///models/stl/ascii/3dPrinting/ring.stl';
			break;
		case 1:
			file = 'file:///models/stl/ascii/3dPrinting/longmao.stl';
			break;
		case 2:
			file = 'file:///models/stl/ascii/3dPrinting/shudi.stl';
			break;
		default:
			file = 'file:///models/stl/ascii/3dPrinting/ring.stl';
	}

	var loader = new THREE.STLLoader();
	await loader.load( file, function ( geometry ) {
		currentObj = geometry;
		console.log(currentObj)
		var voxelMaterial = currentObjMaterial.clone();
		var voxel = new THREE.Mesh( currentObj, voxelMaterial );
		// voxel.rotation.set( Math.PI / 2, 0, 0 );
		voxel.rotation.x = -Math.PI/2;
		voxel.position.set( 0, 0, 0 );
		// voxel.position.divideScalar( SHAPE_SIZE*2.5 ).floor().multiplyScalar( SHAPE_SIZE*2.5 ).addScalar( SHAPE_SIZE*2.5/2 );
		voxel.name = "stl";
		voxel.scale.set(1,1,1)
		if(thisSTL==2){
			voxel.scale.set(.9,.9,.9)
		}
		voxel.receiveShadow = true;
		voxel.castShadow = true;
		objects.push( voxel );
		scene.add( voxel );
		creatModifiedName(userName,thisSTL)
	} );
}
//main end
function getFont(){
	var loader = new THREE.FontLoader();
	loader.load( 'file:///android_asset/css/font/other/SimHei_Regular.json', function ( font ) {
		fontObj = font;
		console.log("get Font")
	})
}
function creatModifiedName(name,thisSTL){
	var fontSize = 5;
	if(thisSTL == 0) {//戒指
		fontSize = 4;
	}
	/*var loader = new THREE.FontLoader();
	loader.load( '../css/font/other/SimHei_Regular.json', function ( font ) {*/
	if(fontObj) {
		console.log( "name::" + name )
		var currentWord = name.toUpperCase();
		console.log( "currentWord::" + currentWord )
		var textGeo = new THREE.TextGeometry( currentWord, {
			font: fontObj,
			size: fontSize,
			height: 1.2,
			curveSegments: 22,
			bevelEnabled: false
		} );
		textGeo.computeBoundingBox();
		textGeo.computeVertexNormals();
		var centerOffset = - 0.5 * ( textGeo.boundingBox.max.x - textGeo.boundingBox.min.x ); //位置，使其居中 centerOffset
		textGeo.translate( centerOffset, - 0, 0 );//坐标中心位置
		var textMaterial = new THREE.MeshPhongMaterial( { color: 0xff0000, specular: 0xffffff, flatShading: true } );
		var mesh = new THREE.Mesh( textGeo, textMaterial );
		mesh.receiveShadow = true;
		mesh.castShadow = true;
		if (thisSTL == 0) {//戒指
			mesh.rotation.y = Math.PI / 2; // 文字反转
			mesh.rotation.x = Math.PI / 2;
			mesh.position.x = 11.88;
			mesh.position.y = 12.61;
			mesh.position.z = - 1.99;
			var direction = new THREE.Vector3( 0, 0, - 1 );
			var axis = new THREE.Vector3( 0, 1, 0 );
			var angle = Math.PI / 6;
			modifier.set( direction, axis, angle ).modify( mesh.geometry );
		} else if (thisSTL == 1) { //龙猫
			mesh.rotation.y = Math.PI; // 文字反转180
			mesh.rotation.x = ( Math.PI / 2 ) / 8;
			mesh.position.y = 14;
			mesh.position.z = - 13;
			var direction = new THREE.Vector3( 0, 0, - 1 );
			var axis = new THREE.Vector3( 0, 1, 0 );
			var angle = Math.PI / 6;
			modifier.set( direction, axis, angle ).modify( mesh.geometry );
		} else if (thisSTL == 2) { //竖笛
			mesh.rotation.y = - Math.PI / 2; // 文字反转90
			mesh.rotation.x = Math.PI / 2; // 文字反转90
			mesh.position.x = - 5.4;
			mesh.position.y = 71;
			mesh.position.z = 4.9;
			var direction = new THREE.Vector3( 0, 0, - 1 );
			var axis = new THREE.Vector3( 0, 1, 0 );
			var angle = Math.PI / 40;
			modifier.set( direction, axis, angle ).modify( mesh.geometry );
		}
		objects.push( mesh );
		scene.add( mesh )
		// camera.position.set(7,37,49)
		// camera.lookAt( 0, 0, 0 );
		exportMoudle( 0, name, thisSTL )
	}
	// } );
}

